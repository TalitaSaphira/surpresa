# Importe a biblioteca necessária
import rospy
from std_msgs.msg import Float32MultiArray

# Configurações PWM (fornecendo os valores mínimo e máximo de PWM)
PWM_MIN = 40  # Valor PWM mínimo
PWM_MAX = 255  # Valor PWM máximo

# Configurações de entrada (0valores mínimos e máximos de entrada do joystick)
JOY_MIN = -3.0  # Valor mínimo do joystick
JOY_MAX = 3.0   # Valor máximo do joystick

# Tópico de entrada do joystick
JOY_TOPIC = '/robot/input'

# Tópico de saída para os valores PWM
PWM_TOPIC = '/motor_pwm'

# Função de callback para o tópico do joystick
def joy_callback(msg):
    # Obtém os valores do joystick
    joy_x, joy_y = msg.data[0], msg.data[1]

    # Mapeia os valores do joystick para o intervalo de PWM
    pwm_output = int((joy_x - JOY_MIN) / (JOY_MAX - JOY_MIN) * (PWM_MAX - PWM_MIN) + PWM_MIN)

    # Publica os valores de PWM
    pwm_publisher.publish(pwm_output)

# Inicializa o nó ROS
rospy.init_node('joystick_to_pwm_node')

# Subscreve ao tópico do joystick
rospy.Subscriber(JOY_TOPIC, Float32MultiArray, joy_callback)

# Cria um publicador para os valores PWM
pwm_publisher = rospy.Publisher(PWM_TOPIC, Int32, queue_size=10)

# Mantenha o programa em execução
rospy.spin()
